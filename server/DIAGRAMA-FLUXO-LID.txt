```
┌─────────────────────────────────────────────────────────────────────────────┐
│                   FLUXO COMPLETO - SISTEMA @lid                              │
│                   Status: 30/10/2025 - Implementado                          │
└─────────────────────────────────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────────────────┐
│ 1️⃣ WEBHOOK CHEGA (Evolution API → WhatsAI)                                   │
└──────────────────────────────────────────────────────────────────────────────┘

    POST /api/webhooks/evolution/:instanceId
         │
         ├─→ Body: { event: "messages.upsert", data: { key, message } }
         │
         ├─→ Validação Zod Schema
         │     ├─ evolutionWebhookSchema (aceita participantAlt/remoteJidAlt)
         │     └─ genericWebhookSchema (fallback)
         │
         └─→ 💾 SALVA LOG (webhook_logs table)
               ├─ rawData: JSON completo
               ├─ remoteJid, remoteJidAlt
               ├─ participant, participantAlt
               ├─ hasLid: boolean
               └─ hasAltField: boolean


┌──────────────────────────────────────────────────────────────────────────────┐
│ 2️⃣ PROCESSAMENTO - messages.upsert                                           │
└──────────────────────────────────────────────────────────────────────────────┘

    ConversationService.handleIncomingMessageAtomic()
         │
         ├─→ 🗺️ CAPTURA MAPEAMENTO @lid
         │     │
         │     ├─ Se participant contém "@lid"
         │     │  └─ E participantAlt contém "@s.whatsapp.net"
         │     │     └─ lidToRealNumberCache.set(participant, participantAlt)
         │     │        Exemplo: "79512746377469@lid" → "5541998773200@s.whatsapp.net"
         │     │
         │     └─ Se remoteJid contém "@lid"
         │        └─ E remoteJidAlt contém "@s.whatsapp.net"
         │           └─ lidToRealNumberCache.set(remoteJid, remoteJidAlt)
         │
         ├─→ 🔀 AUTO-MERGE (SE CAPTUROU MAPEAMENTO)
         │     │
         │     ├─ Busca conversa @lid no banco
         │     ├─ Busca conversa número real no banco
         │     │
         │     └─ Se ambas existem E são diferentes
         │        └─ mergeConversations(lidJid, realJid) ──┐
         │                                                  │
         │                                                  ↓
         ├─→ Normalização                          ┌──────────────────┐
         │     └─ normalizeWhatsAppNumber()        │  MERGE LOGIC     │
         │                                          │  (Fase 4)        │
         ├─→ 👥 Se GRUPO: Busca info Evolution API └──────────────────┘
         │     └─ /group/findGroupInfo
         │
         └─→ 💾 SALVA NO BANCO
               ├─ Busca ou cria Conversation
               │    └─ WHERE: remoteJid + instanceId
               │
               └─ Cria Message
                    └─ WITH: conversationId, content, timestamp...


┌──────────────────────────────────────────────────────────────────────────────┐
│ 3️⃣ PROCESSAMENTO - contacts.update                                           │
└──────────────────────────────────────────────────────────────────────────────┘

    WebhookController.handleEvolutionWebhook()
         │
         ├─→ Dados: { remoteJid, profilePicUrl, pushName }
         │
         ├─→ Atualiza conversa
         │     └─ updateContactFromWebhook(instanceId, remoteJid, {
         │           contactName: pushName,
         │           contactPicture: profilePicUrl
         │        })
         │
         └─→ 🔍 AUTO-DETECT POR FOTO (SE profilePicUrl EXISTE)
               │
               ├─ Busca conversa atualizada
               │
               ├─ Detecta tipo (isLid = remoteJid.includes('@lid'))
               │
               ├─ Busca duplicata por foto
               │    └─ WHERE: contactPicture = profilePicUrl
               │       AND remoteJid = (se @lid busca real, se real busca @lid)
               │       AND id != conversa atual
               │
               └─ Se encontrar duplicata
                  └─ mergeConversations(lidJid, realJid) ──┐
                                                            │
                                                            ↓
                                                   ┌──────────────────┐
                                                   │  MERGE LOGIC     │
                                                   │  (Fase 4)        │
                                                   └──────────────────┘


┌──────────────────────────────────────────────────────────────────────────────┐
│ 4️⃣ MERGE LOGIC (Unificação)                                                  │
└──────────────────────────────────────────────────────────────────────────────┘

    mergeConversations(lidRemoteJid, realNumberRemoteJid)
         │
         ├─→ Busca ambas conversas no banco
         │     ├─ lidConv (com @lid)
         │     └─ realConv (com número real)
         │
         ├─→ Decide: keepConv = realConv, removeConv = lidConv
         │
         └─→ 💾 TRANSAÇÃO
               │
               ├─ 1. Migra mensagens
               │      └─ UPDATE messages
               │         SET conversationId = keepConv.id,
               │             remoteJid = realNumberRemoteJid
               │         WHERE conversationId = removeConv.id
               │
               ├─ 2. Atualiza metadados
               │      └─ UPDATE conversations
               │         SET contactName = COALESCE(keepConv.name, removeConv.name),
               │             contactPicture = COALESCE(keepConv.pic, removeConv.pic),
               │             lastMessageAt = MAX(keep, remove),
               │             unreadCount = keep + remove
               │         WHERE id = keepConv.id
               │
               └─ 3. Remove conversa @lid
                      └─ DELETE FROM conversations WHERE id = removeConv.id


┌──────────────────────────────────────────────────────────────────────────────┐
│ 5️⃣ SCRIPTS MANUAIS                                                           │
└──────────────────────────────────────────────────────────────────────────────┘

    ┌────────────────────────────────────────┐
    │ check-flavia-picture.ts                │
    │  └─ Verifica se duas conversas têm     │
    │     a mesma foto de perfil             │
    └────────────────────────────────────────┘

    ┌────────────────────────────────────────┐
    │ merge-flavia-conversations.ts          │
    │  └─ Unifica manualmente conversas      │
    │     específicas da Flávia              │
    └────────────────────────────────────────┘

    ┌────────────────────────────────────────┐
    │ auto-merge-duplicates.ts               │
    │  └─ Varre TODAS instâncias             │
    │  └─ Detecta duplicatas por foto        │
    │  └─ Unifica automaticamente            │
    └────────────────────────────────────────┘

    ┌────────────────────────────────────────┐
    │ analyze-webhook-logs.ts                │
    │  └─ Analisa webhooks salvos            │
    │  └─ Mostra estatísticas @lid           │
    │  └─ Verifica campos Alt                │
    └────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────────────────┐
│ 📊 ESTRUTURA DE DADOS                                                        │
└──────────────────────────────────────────────────────────────────────────────┘

    ┌─────────────────────────────────────────────────────────────┐
    │ conversations (PostgreSQL)                                  │
    ├─────────────────────────────────────────────────────────────┤
    │ id              │ cmhdiuzbe009r11qwlk1yncyc                 │
    │ instanceId      │ cmhcl23ps000fjgz01bvdv3tc                 │
    │ remoteJid       │ 79512746377469@lid                        │ ← @lid
    │ contactName     │ "Flávia Araújo"                           │
    │ contactPicture  │ https://pps.../514307980_...jpg           │ ← MESMA!
    │ messages        │ 3 mensagens                               │
    └─────────────────────────────────────────────────────────────┘
                                  ↓ MERGE
    ┌─────────────────────────────────────────────────────────────┐
    │ conversations (PostgreSQL)                                  │
    ├─────────────────────────────────────────────────────────────┤
    │ id              │ cmhdjlnsf00c611qwdsdx68vp                 │
    │ instanceId      │ cmhcl23ps000fjgz01bvdv3tc                 │
    │ remoteJid       │ 5541998773200@s.whatsapp.net              │ ← Real
    │ contactName     │ "Flávia Araújo" ← copiado                 │
    │ contactPicture  │ https://pps.../514307980_...jpg           │ ← MESMA!
    │ messages        │ 9 mensagens (3 + 6) ← migradas            │
    └─────────────────────────────────────────────────────────────┘

    ┌─────────────────────────────────────────────────────────────┐
    │ webhook_logs (PostgreSQL) - NOVO!                           │
    ├─────────────────────────────────────────────────────────────┤
    │ id              │ auto-generated                            │
    │ instanceId      │ instance-name                             │
    │ event           │ "messages.upsert"                         │
    │ rawData         │ { event, data, ... } (JSONB)              │
    │ remoteJid       │ "79512746377469@lid"                      │
    │ remoteJidAlt    │ "5541998773200@s.whatsapp.net" ← SE VIER │
    │ participant     │ null (se DM)                              │
    │ participantAlt  │ null (se DM)                              │
    │ hasLid          │ true                                      │
    │ hasAltField     │ true/false                                │
    │ createdAt       │ 2025-10-30 14:00:00                       │
    └─────────────────────────────────────────────────────────────┘

    ┌─────────────────────────────────────────────────────────────┐
    │ Cache em Memória (Map)                                      │
    ├─────────────────────────────────────────────────────────────┤
    │ lidToRealNumberCache                                        │
    │   "79512746377469@lid" → "5541998773200@s.whatsapp.net"    │
    │                                                             │
    │ keyIdToLidCache                                             │
    │   "ABC123XYZ" → "79512746377469@lid"                        │
    └─────────────────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────────────────┐
│ ✅ PONTOS DE UNIFICAÇÃO AUTOMÁTICA                                           │
└──────────────────────────────────────────────────────────────────────────────┘

    1. ⚡ Por Campos Alt (messages.upsert)
       └─ Quando: Webhook tem participantAlt ou remoteJidAlt
       └─ Como: Captura mapeamento → Busca duplicatas → Merge

    2. 📸 Por Foto de Perfil (contacts.update)
       └─ Quando: Foto é atualizada
       └─ Como: Busca conversa com mesma foto mas JID diferente → Merge

    3. 🔧 Manual (Scripts)
       └─ Quando: Executado manualmente
       └─ Como: Varre todas conversas @lid → Compara fotos → Merge


┌──────────────────────────────────────────────────────────────────────────────┐
│ 📈 CASO DE USO REAL - FLÁVIA ARAÚJO                                          │
└──────────────────────────────────────────────────────────────────────────────┘

    ANTES (Estado Duplicado):
    ┌──────────────────────────────────────┐  ┌──────────────────────────────┐
    │ Conv 1: @lid                         │  │ Conv 2: Número Real          │
    ├──────────────────────────────────────┤  ├──────────────────────────────┤
    │ remoteJid: 79512746377469@lid        │  │ remoteJid: 5541998773200@... │
    │ contactName: "Flávia Araújo"         │  │ contactName: null            │
    │ contactPicture: https://pps.../514.. │  │ contactPicture: https://pps..│
    │ messages: 3                          │  │ messages: 6                  │
    └──────────────────────────────────────┘  └──────────────────────────────┘
                  ↓                                       ↓
                  └───────────────┬───────────────────────┘
                                  │
                         ✅ Foto Idêntica!
                                  │
                                  ↓
                    npx tsx merge-flavia-conversations.ts
                                  │
                                  ↓
    DEPOIS (Estado Unificado):
    ┌──────────────────────────────────────────────────────────────┐
    │ Conv: Número Real (Unificada)                                │
    ├──────────────────────────────────────────────────────────────┤
    │ remoteJid: 5541998773200@s.whatsapp.net                      │
    │ contactName: "Flávia Araújo" ← Preservado                    │
    │ contactPicture: https://pps.whatsapp.net/.../514307980_...   │
    │ messages: 9 (3 + 6) ← Migradas                               │
    └──────────────────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────────────────┐
│ 🎯 RESULTADO FINAL                                                           │
└──────────────────────────────────────────────────────────────────────────────┘

    ✅ Sistema detecta e unifica duplicatas automaticamente
    ✅ Usa foto de perfil como identificador único
    ✅ Preserva todos os dados (nome, foto, mensagens)
    ✅ Logs completos salvos para análise
    ✅ Cache em memória para performance
    ✅ Scripts manuais para casos específicos
```
