import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function checkConversationMessages() {
  console.log('üîç Verificando mensagens da conversa com 5541991188909...\n');

  try {
    // Buscar a conversa
    const conversation = await prisma.conversation.findFirst({
      where: {
        remoteJid: '5541991188909@s.whatsapp.net'
      }
    });

    if (!conversation) {
      console.log('‚ùå Conversa n√£o encontrada');
      return;
    }

    console.log(`üì± Conversa encontrada: ${conversation.id}`);
    console.log(`üë§ Nome do contato: ${conversation.contactName}`);
    console.log(`üìÖ √öltima mensagem: ${conversation.lastMessageAt}\n`);

    // Buscar mensagens com m√≠dia
    const messages = await prisma.message.findMany({
      where: {
        conversationId: conversation.id,
        mediaUrl: {
          not: null
        }
      },
      orderBy: {
        timestamp: 'desc'
      },
      take: 10
    });

    console.log(`üì∏ Encontradas ${messages.length} mensagens com m√≠dia:\n`);

    messages.forEach((msg, index) => {
      console.log(`${index + 1}. üìù Tipo: ${msg.messageType}`);
      console.log(`   üìÑ Conte√∫do: "${msg.content}"`);
      console.log(`   üîó Media URL: ${msg.mediaUrl?.substring(0, 80)}...`);
      console.log(`   üìÖ Timestamp: ${msg.timestamp}`);
      console.log(`   üë§ FromMe: ${msg.fromMe}\n`);
    });

    // Verificar se h√° mensagens com conte√∫do n√£o vazio
    const messagesWithContent = messages.filter(msg => msg.content && msg.content.trim() !== '');
    if (messagesWithContent.length > 0) {
      console.log('‚ö†Ô∏è  ALERTA: Encontradas mensagens com conte√∫do n√£o vazio:');
      messagesWithContent.forEach(msg => {
        console.log(`   - Tipo: ${msg.messageType}, Conte√∫do: "${msg.content}"`);
      });
    } else {
      console.log('‚úÖ Todas as mensagens de m√≠dia t√™m conte√∫do vazio (correto!)');
    }

  } catch (error) {
    console.error('‚ùå Erro:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkConversationMessages().catch(console.error);